# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Sun Jul  9 18:32:12 2023
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))